-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bowlingdb
-- -----------------------------------------------------


-- -----------------------------------------------------
-- Schema bowlingdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bowlingdb` DEFAULT CHARACTER SET utf8 ;
USE `bowlingdb` ;

-- -----------------------------------------------------
-- Table `bowlingdb`.`team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bowlingdb`.`team` (
  `teamno` INT NOT NULL AUTO_INCREMENT,
  `teamname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`teamno`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bowlingdb`.`member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bowlingdb`.`member` (
  `userno` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(20) NOT NULL,
  `phone` INT NOT NULL,
  `team_teamno` INT NOT NULL,
  PRIMARY KEY (`userno`, `team_teamno`),
  INDEX `fk_userno_team_idx` (`team_teamno` ASC) VISIBLE,
  CONSTRAINT `fk_userno_team`
    FOREIGN KEY (`team_teamno`)
    REFERENCES `bowlingdb`.`team` (`teamno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bowlingdb`.`sizetable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bowlingdb`.`sizetable` (
  `mfreverse` INT NOT NULL,
  `rfreverse` INT NOT NULL,
  `mfleft` INT NOT NULL,
  `insert1` INT NOT NULL,
  `insert2` INT NOT NULL,
  `rfright` INT NOT NULL,
  `mfforward` INT NOT NULL,
  `rfforward` INT NOT NULL,
  `span1` INT NOT NULL,
  `span2` INT NOT NULL,
  `thforward` INT NOT NULL,
  `thleft` INT NOT NULL,
  `thumb` INT NOT NULL,
  `thright` INT NOT NULL,
  `threverse` INT NOT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bowlingdb`.`size`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bowlingdb`.`size` (
  `rfsize` INT NOT NULL,
  `mfsize` INT NOT NULL,
  `member_userno` INT NOT NULL,
  INDEX `fk_size_member1_idx` (`member_userno` ASC) VISIBLE,
  CONSTRAINT `fk_size_member1`
    FOREIGN KEY (`member_userno`)
    REFERENCES `bowlingdb`.`member` (`userno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bowlingdb`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bowlingdb`.`login` (
  `userid` VARCHAR(50) NOT NULL,
  `userpw` VARCHAR(300) NOT NULL)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

//*************************마구잡이 데이터 테스트 입력 구문

INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (1, "홍길동", "010-8278-4452", "2+1/3", "1+1/5", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (2, "김길동", "010-8478-1452", "1+1/3", "2+1/2", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (3, "이길동", "010-8678-9452", "2+2/3", "1+1/4", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (2, "최길동", "010-8318-7452", "1+1/4", "1+1/5", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (1, "윤길동", "010-8818-5452", "2+1/3", "6+1/7", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (4, "남길동", "010-1878-3452", "7+1/3", "3+1/4", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (3, "우길동", "010-6567-4252", "6+1/5", "1+1/2", NOW());
INSERT INTO MEMBERSIZE (TEAM_TEAMNO, USERNAME, PHONE, RFSIZE, MFSIZE, REG_DATE) VALUES (1, "서길동", "010-9878-4152", "2+1/7", "2+1/2", NOW());

//*************************

//*************************DELETE Team 쿼리문 [프로시저 생성 구문]
delimiter $$
drop procedure if exists deleteteam$$
create procedure deleteteam(tno INT)
begin
	delete from team where teamno=tno;
	alter table team auto_increment = 1;
    set @count = 0;
    update team set teamno = @count:=@count+1;
end $$
delimiter $$

쿼리 실행구문
call deleteteam();

//********************************************************

//**************************indexView 쿼리문 [프로시저 생성 구문]
delimiter $$
drop procedure if exists indexview$$
create procedure indexview(usersearch varchar(20),startno int,endno int)
begin
set @rownum:=0;
select * from ( select * from ( SELECT @rownum:=@rownum+1 as rownum12, USERNO,TEAM_TEAMNO,USERNAME,PHONE,REG_DATE FROM MEMBERSIZE WHERE USERNAME like CONCAT('%',usersearch,'%')) A) B where rownum12 between startno and endno;
end $$
delimiter $$

쿼리 실행 구문
call indexview(검색키워드,페이지 시작번호, 마지막 페이지 번호);